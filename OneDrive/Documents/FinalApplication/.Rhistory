library(cluster)
fitter <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize, data = J)
summary(fitter)
J$predicted <- predict(fitter)
J$residuals <- residuals(fitter)
J
ggplot(J, aes(x = daysSinceFirstPoll + samplesize, y = approvalPercentage, color=samplesize)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
ggplot(J, aes(x = daysSinceFirstPoll, y = residuals)) +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll + samplesize, yend = 0), alpha = .2) + geom_hline(yintercept = 0)
library(rvest)
library(ggplot2)
library(cluster)
fitter <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize, data = J)
summary(fitter)
J$predicted <- predict(fitter)
J$residuals <- residuals(fitter)
J
ggplot(J, aes(x = daysSinceFirstPoll + samplesize, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
ggplot(J, aes(x = daysSinceFirstPoll, y = residuals, color=samplesize)) +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
library(rvest)
library(ggplot2)
library(cluster)
fittest <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize + factor(pollster), data = J)
summary(fittest)
J$predicted <- predict(fittest)
J$residuals <- residuals(fittest)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
graph <- ggplot(J, aes(x = daysSinceFirstPoll , y = residuals, color=pollster))  +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
graph
library(rvest)
library(ggplot2)
library(cluster)
fit <- lm(approvalPercentage ~ daysSinceFirstPoll, data = J)
summary(fit)
J$predicted <- predict(fit)
J$residuals <- residuals(fit)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
ggplot(J, aes(x = daysSinceFirstPoll, y = residuals)) +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll, yend = 0), alpha = .2) + geom_hline(yintercept = 0)
knitr::opts_chunk$set(echo = TRUE)
J <- read.csv('approval_polllist.csv')
print(J)
J$EarlyDate <- J[1,4]
J
J$EarlyDate <- as.Date(J$EarlyDate, format = "%m/%d/%Y")
J$startdate <- as.Date(J$startdate, format = "%m/%d/%Y")
J
J$daysSinceFirstPoll = difftime(J[[4]], J[[23]], units = "days")
J
J$total <- J$approve + J$disapprove
J
J$approvalPercentage <- J$approve / J$total
J
library(rvest)
library(ggplot2)
library(cluster)
fit <- lm(approvalPercentage ~ daysSinceFirstPoll, data = J)
summary(fit)
J$predicted <- predict(fit)
J$residuals <- residuals(fit)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
ggplot(J, aes(x = daysSinceFirstPoll, y = residuals)) +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll, yend = 0), alpha = .2) + geom_hline(yintercept = 0)
J <- read.csv('approval_polllist.csv')
print(J)
J$EarlyDate <- J[1,4]
J
J$EarlyDate <- as.Date(J$EarlyDate, format = "%m/%d/%Y")
J$startdate <- as.Date(J$startdate, format = "%m/%d/%Y")
J
J$daysSinceFirstPoll = difftime(J$startdate, J$EarlyDate, units = "days")
J
J$total <- J$approve + J$disapprove
J
J$approvalPercentage <- J$approve / J$total
J
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(ggplot2)
library(cluster)
fittest <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize + factor(pollster), data = J)
summary(fittest)
J$predicted <- predict(fittest)
J$residuals <- residuals(fittest)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
graph <- ggplot(J, aes(x = daysSinceFirstPoll , y = residuals, color=pollster))  +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
graph
library(rvest)
library(ggplot2)
library(cluster)
fitter <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize, data = J)
summary(fitter)
J$predicted <- predict(fitter)
J$residuals <- residuals(fitter)
J
ggplot(J, aes(x = daysSinceFirstPoll + samplesize, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
ggplot(J, aes(x = daysSinceFirstPoll, y = residuals, color=samplesize)) +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
library(rvest)
library(ggplot2)
library(cluster)
fit <- lm(approvalPercentage ~ daysSinceFirstPoll, data = J)
summary(fit)
J$predicted <- predict(fit)
J$residuals <- residuals(fit)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
ggplot(J, aes(x = daysSinceFirstPoll, y = residuals)) +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll, yend = 0), alpha = .2) + geom_hline(yintercept = 0)
J <- read.csv('approval_polllist.csv')
print(J)
J$EarlyDate <- J[1,4]
J
J$EarlyDate <- as.Date(J$EarlyDate, format = "%m/%d/%Y")
J$startdate <- as.Date(J$startdate, format = "%m/%d/%Y")
J
J$daysSinceFirstPoll = difftime(J$startdate, J$EarlyDate, units = "days")
J
J$total <- J$approve + J$disapprove
J
J$approvalPercentage <- J$approve / J$total
J
library(rvest)
library(ggplot2)
library(cluster)
fittest <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize + factor(pollster), data = J)
summary(fittest)
J$predicted <- predict(fittest)
J$residuals <- residuals(fittest)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
graph <- ggplot(J, aes(x = daysSinceFirstPoll , y = residuals, color=pollster))  +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
graph
library(rvest)
library(ggplot2)
library(cluster)
fit <- lm(approvalPercentage ~ daysSinceFirstPoll, data = J)
summary(fit)
J$predicted <- predict(fit)
J$residuals <- residuals(fit)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
ggplot(J, aes(x = daysSinceFirstPoll, y = residuals)) +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll, yend = 0), alpha = .2) + geom_hline(yintercept = 0)
library(rvest)
library(ggplot2)
library(cluster)
fittest <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize + factor(pollster), data = J)
summary(fittest)
J$predicted <- predict(fittest)
J$residuals <- residuals(fittest)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
graph <- ggplot(J, aes(x = daysSinceFirstPoll , y = residuals, color=pollster))  +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
graph
library(rvest)
library(ggplot2)
library(cluster)
fitter <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize, data = J)
summary(fitter)
J$predicted <- predict(fitter)
J$residuals <- residuals(fitter)
J
ggplot(J, aes(x = daysSinceFirstPoll + samplesize, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
ggplot(J, aes(x = daysSinceFirstPoll, y = residuals, color=samplesize)) +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
knitr::opts_chunk$set(echo = TRUE)
J <- read.csv('approval_polllist.csv')
print(J)
J$EarlyDate <- J[1,4]
J
J$EarlyDate <- as.Date(J$EarlyDate, format = "%m/%d/%Y")
J$startdate <- as.Date(J$startdate, format = "%m/%d/%Y")
J
J$daysSinceFirstPoll = difftime(J$startdate, J$EarlyDate, units = "days")
J
J$total <- J$approve + J$disapprove
J
J$approvalPercentage <- J$approve / J$total
J
library(rvest)
library(ggplot2)
library(cluster)
fit <- lm(approvalPercentage ~ daysSinceFirstPoll, data = J)
summary(fit)
J$predicted <- predict(fit)
J$residuals <- residuals(fit)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
ggplot(J, aes(x = daysSinceFirstPoll, y = residuals)) +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll, yend = 0), alpha = .2) + geom_hline(yintercept = 0)
library(rvest)
library(ggplot2)
library(cluster)
fitter <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize, data = J)
summary(fitter)
J$predicted <- predict(fitter)
J$residuals <- residuals(fitter)
J
ggplot(J, aes(x = daysSinceFirstPoll + samplesize, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
ggplot(J, aes(x = daysSinceFirstPoll, y = residuals, color=samplesize)) +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
library(rvest)
library(ggplot2)
library(cluster)
fittest <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize + factor(pollster), data = J)
summary(fittest)
J$predicted <- predict(fittest)
J$residuals <- residuals(fittest)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
graph <- ggplot(J, aes(x = daysSinceFirstPoll , y = residuals, color=pollster))  +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
graph
library(rvest)
library(ggplot2)
library(cluster)
fittest <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize + factor(pollster), data = J)
summary(fittest)
J$predicted <- predict(fittest)
J$residuals <- residuals(fittest)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
graph <- ggplot(J, aes(x = daysSinceFirstPoll , y = residuals, color=pollster))  +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
graph
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(ggplot2)
library(cluster)
fittest <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize + factor(pollster), data = J)
summary(fittest)
J$predicted <- predict(fittest)
J$residuals <- residuals(fittest)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
graph <- ggplot(J, aes(x = daysSinceFirstPoll , y = residuals, color=pollster))  +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
graph
View(graph)
View(graph)
library(rvest)
library(ggplot2)
library(cluster)
fittest <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize + factor(pollster), data = J)
summary(fittest)
J$predicted <- predict(fittest)
J$residuals <- residuals(fittest)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
graph <- ggplot(J, aes(x = daysSinceFirstPoll , y = residuals, color=pollster))  +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
graph
View(graph)
View(graph)
graph
library(rvest)
library(ggplot2)
library(cluster)
fittest <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize + factor(pollster), data = J)
summary(fittest)
J$predicted <- predict(fittest)
J$residuals <- residuals(fittest)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
graph <- ggplot(J, aes(x = daysSinceFirstPoll , y = residuals, color=pollster))  +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
graph
J <- read.csv('approval_polllist.csv')
print(J)
J$EarlyDate <- J[1,4]
J
J$EarlyDate <- as.Date(J$EarlyDate, format = "%m/%d/%Y")
J$startdate <- as.Date(J$startdate, format = "%m/%d/%Y")
J
J$daysSinceFirstPoll = difftime(J$startdate, J$EarlyDate, units = "days")
J
J$total <- J$approve + J$disapprove
J
J$approvalPercentage <- J$approve / J$total
J
shiny::runApp('FinalApplication')
runApp('FinalApplication')
knitr::opts_chunk$set(echo = TRUE)
J <- read.csv('approval_polllist.csv')
print(J)
J$EarlyDate <- J[1,4]
J
J$EarlyDate <- as.Date(J$EarlyDate, format = "%m/%d/%Y")
J$startdate <- as.Date(J$startdate, format = "%m/%d/%Y")
J
J$daysSinceFirstPoll = difftime(J$startdate, J$EarlyDate, units = "days")
J
J$total <- J$approve + J$disapprove
J
J$approvalPercentage <- J$approve / J$total
J
J <- read.csv('approval_polllist.csv')
print(J)
J$EarlyDate <- J[1,4]
J
J$EarlyDate <- as.Date(J$EarlyDate, format = "%m/%d/%Y")
J$startdate <- as.Date(J$startdate, format = "%m/%d/%Y")
J
J$daysSinceFirstPoll = difftime(J$startdate, J$EarlyDate, units = "days")
J
J$daysSinceFirstPoll <- as.numeric(J$daysSinceFirstPoll)
J
J$total <- J$approve + J$disapprove
J
J$approvalPercentage <- J$approve / J$total
J
runApp('FinalApplication')
runApp('FinalApplication')
runApp('FinalApplication')
shiny::runApp('FinalApplication')
runApp('FinalApplication')
shiny::runApp('FinalApplication')
runApp('FinalApplication')
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(ggplot2)
library(cluster)
fit <- lm(approvalPercentage ~ daysSinceFirstPoll, data = J)
summary(fit)
J$predicted <- predict(fit)
J$residuals <- residuals(fit)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
ggplot(J, aes(x = daysSinceFirstPoll, y = residuals)) +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll, yend = 0), alpha = .2) + geom_hline(yintercept = 0)
shiny::runApp('FinalApplication')
runApp('FinalApplication')
shiny::runApp('FinalApplication')
runApp('FinalApplication')
shiny::runApp('FinalApplication')
runApp('FinalApplication')
runApp('FinalApplication')
runApp('FinalApplication')
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(ggplot2)
library(cluster)
fittest <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize + factor(pollster), data = J)
summary(fittest)
J$predicted <- predict(fittest)
J$residuals <- residuals(fittest)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
graph <- ggplot(J, aes(x = daysSinceFirstPoll , y = residuals, color=pollster))  +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
graph
shiny::runApp('FinalApplication')
runApp('FinalApplication')
runApp('FinalApplication')
J
max.print J
"max.print" J
View(J)
View(J)
library(rvest)
library(ggplot2)
library(cluster)
fitter <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize, data = J)
summary(fitter)
J$predicted <- predict(fitter)
J$residuals <- residuals(fitter)
J
ggplot(J, aes(x = daysSinceFirstPoll + samplesize, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
ggplot(J, aes(x = daysSinceFirstPoll, y = residuals, color=samplesize)) +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
runApp('FinalApplication')
View(J)
View(J)
library(rvest)
library(ggplot2)
library(cluster)
fittest <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize + factor(pollster), data = J)
summary(fittest)
J$predicted <- predict(fittest)
J$residuals <- residuals(fittest)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
graph <- ggplot(J, aes(x = daysSinceFirstPoll , y = residuals, color=pollster))  +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
graph
runApp('FinalApplication')
runApp('FinalApplication')
View(J)
View(J)
View(J)
View(J)
runApp('FinalApplication')
runApp('FinalApplication')
runApp('FinalApplication')
runApp('FinalApplication')
runApp('FinalApplication')
runApp('FinalApplication')
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(ggplot2)
library(cluster)
fittest <- lm(approvalPercentage ~ daysSinceFirstPoll + samplesize + factor(pollster), data = J)
summary(fittest)
J$predicted <- predict(fittest)
J$residuals <- residuals(fittest)
J
ggplot(J, aes(x = daysSinceFirstPoll, y = approvalPercentage)) +
geom_point() +
geom_point(aes(y = predicted), shape = 1)
graph <- ggplot(J, aes(x = daysSinceFirstPoll , y = residuals, color=pollster))  +
geom_point() +
geom_segment(aes(xend = daysSinceFirstPoll , yend = 0), alpha = .2) + geom_hline(yintercept = 0)
graph
shiny::runApp('FinalApplication')
View(J)
View(J)
runApp('FinalApplication')
runApp('FinalApplication')
runApp('FinalApplication')
J$pollster
runApp('FinalApplication')
runApp('FinalApplication')
runApp('FinalApplication')
runApp('FinalApplication')
runApp('FinalApplication')
View(J)
View(J)
runApp('FinalApplication')
summary(fittest)
shiny::runApp('FinalApplication')
setwd("~/FinalApplication")
runApp()
runApp()
